openapi: 3.0.0
info:
  title: Marketplace API
  version: 1.0.0
servers: [
    {
      "url": "http://localhost:5000"
    }
  ]
paths:
  /api/v2/users:
    get:
      tags:
        - users
      summary: Get all users
      security:
        - jwt: []
      responses:
        '200':
          description: List of found users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No users found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /api/v2/users/login:
    post:
      tags:
        - users
      summary: Login user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '404':
          description: Unsuccessful login
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /api/v2/users/register:
    post:
      tags:
        - users
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fio:
                  type: string
                email:
                  type: string
                password:
                  type: string
                money:
                  type: number
                address:
                  type: string
                phone:
                  type: string
                role:
                  type: string
      responses:
        '201':
          description: User created
        '404':
          description: User not created
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /api/v2/users/{user_id}:
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the user
    get:
      tags:
        - users
      summary: Get user by ID
      security:
        - jwt: []
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
    delete:
      tags:
        - users
      summary: Delete user by ID
      security:
        - jwt: []
      responses:
        '200':
          description: User deleted
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
    patch:
      tags:
        - users
      summary: Update user by ID
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fio:
                  type: string
                email:
                  type: string
                password:
                  type: string
                money:
                  type: number
                address:
                  type: string
                phone:
                  type: string
                role:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /api/v2/users/{email}:
    get:
      tags:
        - users
      summary: Get user by email
      security:
        - jwt: []
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          description: User's email
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /api/v2/payments:
    get:
      tags:
        - payments
      summary: Get all payments
      security:
        - jwt: []
      responses:
        '200':
          description: List of found payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Payments not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/payments/{payment_id}:
    delete:
      tags:
        - payments
      summary: Delete a payment
      security:
        - jwt: []
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Payment deleted
        '401':
          description: Unauthorized
        '404':
          description: Payment not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
    patch:
      tags:
        - payments
      summary: Update a payment
      security:
        - jwt: []
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                all_price:
                  type: number
                state:
                  type: string
                user_id:
                  type: integer
      responses:
        '200':
          description: User updated 
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /api/v2/payments/users/{user_id}:
    get:
      tags:
        - payments
      summary: Get payments by user_id
      security:
        - jwt: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of found payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '401':
          description: Unauthorized
        '404':
          description: Payments not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
    post:
      tags:
        - payments
      summary: Create payment by user_id
      security:
        - jwt: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Payment created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '401':
          description: Unauthorized
        '404':
          description: Payments not created
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/products:
    get:
      tags:
        - products
      summary: Get all products
      security:
        - jwt: []
      responses:
        '200':
          description: List of found products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Products not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
    post:
      tags:
        - products
      summary: Create a new product
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                seller_id:
                  type: integer
                title:
                  type: string
                price:
                  type: number
                rate:
                  type: number
              required:
                - seller_id
                - title
                - price
                - rate
      responses:
        '201':
          description: Product created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Product not created
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/products/{product_id}:
    delete:
      tags:
        - products
      summary: Delete a product
      security:
        - jwt: []
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Product not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
    patch:
      tags:
        - products
      summary: Update a product
      security:
        - jwt: []
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                price:
                  type: number
                rate:
                  type: number
                seller_id:
                  type: integer
      responses:
        '200':
          description: Product updated
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Product not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/products/id/{product_id}:
    get:
      tags:
        - products
      summary: Get product by ID
      security:
        - jwt: []
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/products/title/{title}:
    get:
      tags:
        - products
      summary: Get product by title
      security:
        - jwt: []
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/orders:
    get:
      tags:
        - orders
      summary: Get all orders
      security:
        - jwt: []
      responses:
        '200':
          description: List of found orders
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Orders not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/orders/{order_id}:
    parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the order
    get:
      tags:
        - orders
      summary: Get order by ID
      security:
        - jwt: []
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
        '404':
          description: Order not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
    patch:
      tags:
        - orders
      summary: Update an order
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                all_price:
                  type: number
                address:
                  type: string
                user_id:
                  type: integer
      responses:
        '200':
          description: Order updated
        '401':
          description: Unauthorized
        '404':
          description: Order not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/carts:
    get:
      tags:
        - carts
      summary: Get all carts
      security:
        - jwt: []
      responses:
        '200':
          description: List of all carts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Carts not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/carts/{cart_id}:
    parameters:
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the cart
    get:
      tags:
        - carts
      summary: Get cart by ID
      security:
        - jwt: []
      responses:
        '200':
          description: Cart found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '401':
          description: Unauthorized
        '404':
          description: Cart not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/carts/{cart_id}/products:
    parameters:
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the cart
    get:
      tags:
        - products carts
      summary: Get products in cart by cart_id
      security:
        - jwt: []
      responses:
        '200':
          description: List of products in cart
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCart'
        '401':
          description: Unauthorized
        '404':
          description: Products in cart not found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/carts/{cart_id}/products/{product_id}:
    parameters:
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the cart
      - name: product_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the product
    post:
      tags:
        - products carts
      summary: Add product to cart
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '201':
          description: Product added to cart
        '401':
          description: Unauthorized
        '404':
          description: Product not added to cart
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
    delete:
      tags:
        - products carts
      summary: Delete product from cart
      security:
        - jwt: []
      responses:
        '200':
          description: Product deleted from cart
        '401':
          description: Unauthorized
        '404':
          description: Product not found in cart
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
    patch:
      tags:
        - products carts
      summary: Update product in cart
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: Product updated
        '401':
          description: Unauthorized
        '404':
          description: Product not found in cart
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/orders/{order_id}/products:
    parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the order
    get:
      tags:
        - products orders
      summary: Get products in order by ID
      security:
        - jwt: []
      responses:
        '200':
          description: List of products in order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductOrder'
        '401':
          description: Unauthorized
        '404':
          description: Products not found in order
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
  /api/v2/orders/{order_id}/products/{product_id}:
    parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the order
      - name: product_id
        in: path
        required: true
        schema:
          type: integer
        description: The ID of the product
    post:
      tags:
        - products orders
      summary: Add product to order
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '201':
          description: Product added to order
        '401':
          description: Unauthorized
        '404':
          description: Product not added to order
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
    delete:
      tags:
        - products orders
      summary: Delete product from order
      security:
        - jwt: []
      responses:
        '200':
          description: Product deleted from order
        '401':
          description: Unauthorized
        '404':
          description: Product not found in order
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
    patch:
      tags:
        - products orders
      summary: Update product in cart
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: Product updated
        '401':
          description: Unauthorized
        '404':
          description: Product not found in order
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal server error
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Product:
      type: object
      properties:
        product_id:
          type: integer
        seller_id:
          type: integer
        title:
          type: string
        price:
          type: number
        rate:
          type: number
      required:
        - product_id
        - seller_id
        - title
        - price
        - rate
    Payment:
      type: object
      properties:
        payment_id:
          type: integer
        all_price:
          type: number
        state:
          type: string
        user_id:
          type: integer
      required:
        - payment_id
        - all_price
        - state
        - user_id
    Order:
      type: object
      properties:
        order_id:
          type: integer
        all_price:
          type: number
        address:
          type: string
        user_id:
          type: integer
      required:
        - order_id
        - all_price
        - address
        - user_id
    Cart:
      type: object
      properties:
        cart_id:
          type: integer
        all_price:
          type: number
        user_id:
          type: integer
      required:
        - cart_id
        - all_price
        - user_id
    User:
      type: object
      properties:
        user_id:
          type: integer
        fio:
          type: string
        email:
          type: string
        password:
          type: string
        money:
          type: number
        address:
          type: string
        phone:
          type: string
        role:
          type: string
          default: user
      required:
        - user_id
        - fio
        - email
        - password
        - money
        - address
        - phone 
        - role 
    ProductCart:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
        cart_id:
          type: integer
      required:
        - product_id
        - quantity
        - cart_id
    ProductOrder:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
        order_id:
          type: integer
      required:
        - product_id
        - quantity
        - order_id
    Token:
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token