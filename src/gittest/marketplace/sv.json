{
  "openapi": "3.0.0",
  "info": {
    "title": "Product API",
    "version": "1.0.0"
  },
  "paths": {
    "/users/logout/{user_id}": {
      "post": {
        "tags": ["users"],
        "summary": "Logout user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {"description": "User logged out successfully"},
          "400": {"description": "Logout failed"}
        }
      }
    },
    "/users/route/{name_page}/{user_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Route user to page",
        "parameters": [
          {
            "name": "name_page",
            "in": "path",
            "required": true,
            "schema": {"type": "string"},
            "description": "The name of the page"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {"description": "User routed successfully"},
          "404": {"description": "Page or user not found"}
        }
      }
    },
    "/users/route_rules/{name_page}/{user_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Route user with new rules",
        "parameters": [
          {
            "name": "name_page",
            "in": "path",
            "required": true,
            "schema": {"type": "string"},
            "description": "The name of the page"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {"description": "User routed with new rules successfully"},
          "404": {"description": "Page or user not found"}
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["users"],
        "summary": "Login user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {"description": "User logged in successfully"},
          "401": {"description": "Invalid email or password"}
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": ["users"],
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/User"}
            }
          }
        },
        "responses": {
          "201": {"description": "User registered successfully"},
          "400": {"description": "Invalid registration data"}
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["users"],
        "summary": "Create a user",
        "requestBody": {"content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/User"}
            }
          }
        },
        "responses": {
          "201": {"description": "User created successfully"},
          "400": {"description": "Invalid user data"}
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/User"}}
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "The ID of the user"
        }
      ],
      "delete": {
        "tags": ["users"],
        "summary": "Delete user by ID",
        "responses": {
          "204": {"description": "User deleted successfully"},
          "404": {"description": "User not found"}
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Get user by ID",
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/User"}
              }
            }
          },
          "404": {"description": "User not found"}
        }
      },
      "patch": {
        "tags": ["users"],
        "summary": "Update user by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/User"}
            }
          }
        },
        "responses": {
          "200": {"description": "User updated successfully"},
          "400": {"description": "Invalid update data"},
          "404": {"description": "User not found"}
        }
      }
    },
    "/admin/users/{user_id}": {
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "The ID of the user to delete"
        }
      ],
      "delete": {
        "tags": ["users"],
        "summary": "Admin delete a user",
        "responses": {
          "204": {"description": "User deleted by admin successfully"},
          "404": {"description": "User not found"}
        }
      },
      "patch": {
        "tags": ["users"],
        "summary": "Admin update a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/User"}
            }
          }
        },
        "responses": {
          "200": {"description": "User updated by admin successfully"},
          "400": {"description": "Invalid update data"},
          "404": {"description": "User not found"}
        }
      }
    },
    "/users/email": {
      "post": {
        "tags": ["users"],
        "summary": "Get user by email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string"}
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details by email",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/User"}
              }
            }
          },
          "404": {"description": "User not found"}
        }
      }
    },
    "/payments": {
      "post": {
        "tags": ["payments"],
        "summary": "Create a new payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "all_price": {"type": "number"},
                  "state": {"type": "string"},
                  "user_id": {"type": "integer"}
                },
                "required": ["all_price", "user_id"]
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Payment created successfully"},
          "400": {"description": "Invalid request data"},
          "500": {"description": "Internal server error"}
        }
      },
      "get": {
        "tags": ["payments"],
        "summary": "Get all payments",
        "responses": {
          "200": {
            "description": "List of all payments",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/Payment"}}
              }
            }
          }
        }
      }
    },
    "/payments/{payment_id}": {
      "delete": {
        "tags": ["payments"],
        "summary": "Delete a payment",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {"description": "Payment deleted successfully"},
          "404": {"description": "Payment not found"}
        }
      },
      "patch": {
        "tags": ["payments"],
        "summary": "Update a payment",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "all_price": {"type": "number"},
                  "state": {"type": "string"},
                  "user_id": {"type": "integer"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Payment updated successfully"},
          "400": {"description": "Invalid request data"},
          "404": {"description": "Payment not found"}
        }
      }
    },
    "/payments/user/{user_id}": {
      "get": {
        "tags": ["payments"],
        "summary": "Get payment by user ID",
        "parameters": [
          {
            "name": "user_id",
            "in": "path","required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details for user",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Payment"}
              }
            }
          },
          "404": {"description": "Payment not found for user"}
        }
      }
    },
    "/admin/payments": {
      "get": {
        "tags": ["payments"],
        "summary": "Get payments as admin",
        "responses": {
          "200": {
            "description": "List of payments visible to admin",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/Payment"}}
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["products"],
        "summary": "Create a new product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "seller_id": {"type": "integer"},
                  "title": {"type": "string"},
                  "price": {"type": "number"},
                  "rate": {"type": "number"}
                },
                "required": ["seller_id", "title", "price"]
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Product created successfully"},
          "400": {"description": "Invalid request data"},
          "500": {"description": "Internal server error"}
        }
      },
      "get": {
        "tags": ["products"],
        "summary": "Get all products",
        "responses": {
          "200": {
            "description": "List of all products",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/Product"}}
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": ["products"],
        "summary": "Get product by ID",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Product"}
              }
            }
          },
          "404": {"description": "Product not found"}
        }
      },
      "delete": {
        "tags": ["products"],
        "summary": "Delete a product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {"description": "Product deleted successfully"},
          "404": {"description": "Product not found"}
        }
      },
      "patch": {
        "tags": ["products"],
        "summary": "Update a product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path","required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {"type": "string"},
                  "price": {"type": "number"},
                  "rate": {"type": "number"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Product updated successfully"},
          "400": {"description": "Invalid request data"},
          "404": {"description": "Product not found"}
        }
      }
    },
    "/sellers/{seller_id}/products": {
      "get": {
        "tags": ["products"],
        "summary": "Get products by seller",
        "parameters": [
          {
            "name": "seller_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "List of seller's products",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/Product"}}
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}": {
      "parameters": [
        {
          "name": "order_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "The ID of the order"
        }
      ],
      "patch": {
        "tags": ["orders"],
        "summary": "Update an order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "all_price": {"type": "number"},
                  "address": {"type": "string"},
                  "user_id": {"type": "integer"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Order updated successfully"},
          "400": {"description": "Invalid request data"},
          "404": {"description": "Order not found"}
        }
      },
      "get": {
        "tags": ["orders"],
        "summary": "Get order by ID",
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Order"}
              }
            }
          },
          "404": {"description": "Order not found"}
        }
      }
    },
    "/admin/orders": {
      "patch": {
        "tags": ["orders"],
        "summary": "Admin update order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {"type": "integer"},
                  "all_price": {"type": "number"},
                  "address": {"type": "string"},
                  "user_id": {"type": "integer"}
                },
                "required": ["order_id"]
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Order updated by admin successfully"},
          "400": {"description": "Invalid request data"},
          "404": {"description": "Order not found"}
        }
      }
    },
    "/admin/orders/{order_id}": {
      "parameters": [
        {
          "name": "order_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "The ID of the order"
        }
      ],
      "get": {
        "tags": ["orders"],
        "summary": "Admin get order by ID",
        "responses": {
          "200": {
            "description": "Order details for admin",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Order"}
              }
            }
          },
          "404": {"description": "Order not found"}
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["orders"],
        "summary": "Get all orders",
        "responses": {
          "200": {
            "description": "List of all orders",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/Order"}}
              }
            }
          }
        }
      }
    },
    "/carts/{cart_id}": {
      "parameters": [
        {
          "name": "cart_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "The ID of the cart"
        }
      ],
      "get": {
        "tags": ["carts"],
        "summary": "Get cart by ID",
        "responses": {
          "200": {
            "description": "Cart details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Cart"}
              }
            }
          },
          "404": {"description": "Cart not found"}
        }
      }
    },
    "/admin/carts": {
      "get": {
        "tags": ["carts"],
        "summary": "Admin get cart information",
        "responses": {
          "200": {
            "description": "Admin view of carts",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/Cart"}}
              }
            }
          }
        }
      }
    },
    "/carts": {
      "get": {
        "tags": ["carts"],
        "summary": "Get all carts",
        "responses": {
          "200": {
            "description": "List of all carts",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/Cart"}}
              }
            }
          }
        }
      }
    },
    "/carts/{cart_id}/products": {
      "parameters": [
        {
          "name": "cart_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "The ID of the cart"
        }
      ],
      "post": {
        "tags": ["products carts"],
        "summary": "Add product to cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ProductCart"}
            }
          }
        },
        "responses": {
          "201": {"description": "Product added to cart successfully"},
          "400": {"description": "Invalid product data"}
        }
      },
      "delete": {
        "tags": ["products carts"],
        "summary": "Delete product from cart",
        "responses": {
          "204": {"description": "Product deleted from cart successfully"},
          "404": {"description": "Product not found in cart"}
        }
      },
      "patch": {
        "tags": ["products carts"],
        "summary": "Update product in cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ProductCart"}
            }
          }
        },
        "responses": {
          "200": {"description": "Product updated in cart successfully"},
          "400": {"description": "Invalid product data"},
          "404": {"description": "Product not found in cart"}
        }
      },
      "get": {
        "tags": ["products carts"],
        "summary": "Get products in cart by ID",
        "responses": {
          "200": {
            "description": "List of products in cart",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProductCart"}}
              }
            }
          },
          "404": {"description": "Cart not found"}
        }
      }
    },
    "/admin/carts/products": {
      "post": {
        "tags": ["products carts"],
        "summary": "Admin add product to cart",
        "requestBody": {
          "content": {
            "application/json": {"schema": {"$ref": "#/components/schemas/ProductCart"}
            }
          }
        },
        "responses": {
          "201": {"description": "Product added to cart by admin successfully"},
          "400": {"description": "Invalid product data"}
        }
      },
      "delete": {
        "tags": ["products carts"],
        "summary": "Admin delete product from cart",
        "responses": {
          "204": {"description": "Product deleted from cart by admin successfully"},
          "404": {"description": "Product not found in cart"}
        }
      },
      "patch": {
        "tags": ["products carts"],
        "summary": "Admin update product in cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ProductCart"}
            }
          }
        },
        "responses": {
          "200": {"description": "Product updated in cart by admin successfully"},
          "400": {"description": "Invalid product data"},
          "404": {"description": "Product not found in cart"}
        }
      },
      "get": {
        "tags": ["products carts"],
        "summary": "Admin get products in cart",
        "responses": {
          "200": {
            "description": "Admin view of all products in cart",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProductCart"}}
              }
            }
          },
          "404": {"description": "Cart not found"}
        }
      }
    },
    "/orders/{order_id}/products": {
      "parameters": [
        {
          "name": "order_id",
          "in": "path",
          "required": true,
          "schema": {"type": "integer"},
          "description": "The ID of the order"
        }
      ],
      "post": {
        "tags": ["products orders"],
        "summary": "Add product to order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ProductOrder"}
            }
          }
        },
        "responses": {
          "201": {"description": "Product added to order successfully"},
          "400": {"description": "Invalid product data"}
        }
      },
      "delete": {
        "tags": ["products orders"],
        "summary": "Delete product from order",
        "responses": {
          "204": {"description": "Product deleted from order successfully"},
          "404": {"description": "Product not found in order"}
        }
      },
      "patch": {
        "tags": ["products orders"],
        "summary": "Update product in order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ProductOrder"}
            }
          }
        },
        "responses": {
          "200": {"description": "Product updated in order successfully"},
          "400": {"description": "Invalid product data"},
          "404": {"description": "Product not found in order"}
        }
      },
      "get": {
        "tags": ["products orders"],
        "summary": "Get products in order by ID",
        "responses": {
          "200": {
            "description": "List of products in order",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProductOrder"}}
              }
            }
          },
          "404": {"description": "Order not found"}
        }
      }
    },
    "/admin/orders/products": {
      "post": {
        "tags": ["products orders"],
        "summary": "Admin add product to order",
        "requestBody": {
          "content":{
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ProductOrder"}
            }
          }
        },
        "responses": {
          "201": {"description": "Product added to order by admin successfully"},
          "400": {"description": "Invalid product data"}
        }
      },
      "delete": {
        "tags": ["products orders"],
        "summary": "Admin delete product from order",
        "responses": {
          "204": {"description": "Product deleted from order by admin successfully"},
          "404": {"description": "Product not found in order"}
        }
      },
      "patch": {
        "tags": ["products orders"],
        "summary": "Admin update product in order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ProductOrder"}
            }
          }
        },
        "responses": {
          "200": {"description": "Product updated in order by admin successfully"},
          "400": {"description": "Invalid product data"},
          "404": {"description": "Product not found in order"}
        }
      },
      "get": {
        "tags": ["products orders"],
        "summary": "Admin get products in order",
        "responses": {
          "200": {
            "description": "Admin view of all products in order",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProductOrder"}}
              }
            }
          },
          "404": {"description": "Order not found"}
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "product_id": {"type": "integer"},
          "seller_id": {"type": "integer"},
          "title": {"type": "string"},
          "price": {"type": "number"},
          "rate": {"type": "number"}
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "payment_id": {"type": "integer"},
          "all_price": {"type": "number"},
          "state": {"type": "string"},
          "user_id": {"type": "integer"}
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_id": {"type": "integer"},
          "all_price": {"type": "number"},
          "address": {"type": "string"},
          "user_id": {"type": "integer"}
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "cart_id": {"type": "integer"},
          "all_price": {"type": "number"},
          "user_id": {"type": "integer"}
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "user_id": {"type": "integer"},
          "fio": {"type": "string"},
          "email": {"type": "string"},
          "password": {"type": "string"},
          "money": {"type": "number"},
          "address": {"type": "string"},
          "phone": {"type": "string"},
          "role": {"type": "string", "default": "user"}
        },
        "required": ["fio", "email", "password"]
      },
      "ProductCart": {
        "type": "object",
        "properties": {
          "product_id": {"type": "integer"},
          "quantity": {"type": "integer"},
          "cart_id": {"type": "integer"}
        },
        "required": ["product_id", "quantity", "cart_id"]
      },
      "ProductOrder": {
        "type": "object",
        "properties": {
          "product_id": {"type": "integer"},
          "quantity": {"type": "integer"},
          "order_id": {"type": "integer"}
        },
        "required": ["product_id", "quantity", "order_id"]
      }
    }
  }
}